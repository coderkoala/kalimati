<?php
namespace App\NepaliDate;

/*
* Class Conversion
*/
class Conversion {

	private $nepali_calendar = array(
		array(2000,'1943-4-13',31,32,31,32,31,30,30,30,29,30,29,31),
		array(2001,'1944-4-13',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2002,'1945-4-13',31,31,32,31,32,30,30,29,30,29,30,30),
		array(2003,'1946-4-13',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2004,'1947-4-14',30,32,31,32,31,30,30,30,29,30,29,31),
		array(2005,'1948-4-13',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2006,'1949-4-13',31,31,32,32,31,30,30,29,30,29,30,30),
		array(2007,'1950-4-13',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2008,'1951-4-14',31,31,31,32,31,31,29,30,29,30,29,31),
		array(2009,'1952-4-13',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2010,'1953-4-13',31,31,32,32,31,30,30,29,30,29,30,30),
		array(2011,'1954-4-13',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2012,'1955-4-14',31,31,31,32,31,31,29,30,30,29,30,30),
		array(2013,'1956-4-13',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2014,'1957-4-13',31,31,32,32,31,30,30,29,30,29,30,30),
		array(2015,'1958-4-13',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2016,'1959-4-14',31,31,31,32,31,31,29,30,30,29,30,30),
		array(2017,'1960-4-13',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2018,'1961-4-13',31,32,31,32,31,30,30,29,30,29,30,30),
		array(2019,'1962-4-13',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2020,'1963-4-14',31,31,31,32,31,31,30,29,30,29,30,30),
		array(2021,'1964-4-13',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2022,'1965-4-13',31,32,31,32,31,30,30,30,29,29,30,30),
		array(2023,'1966-4-13',31,32,31,32,31,30,30,30,29,30,29,31),
		array(2024,'1967-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2025,'1968-4-13',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2026,'1969-4-13',31,32,31,32,31,30,30,30,29,29,30,30),
		array(2027,'1970-4-13',31,32,31,32,31,30,30,30,29,30,29,31),
		array(2028,'1971-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2029,'1972-4-13',31,31,32,31,32,30,30,29,30,29,30,30),
		array(2030,'1973-4-13',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2031,'1974-4-14',30,32,31,32,31,30,30,30,29,30,29,31),
		array(2032,'1975-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2033,'1976-4-13',31,31,32,32,31,30,30,29,30,29,30,30),
		array(2034,'1977-4-13',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2035,'1978-4-14',31,31,31,32,31,31,29,30,29,30,29,31),
		array(2036,'1979-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2037,'1980-4-13',31,31,32,32,31,30,30,29,30,29,30,30),
		array(2038,'1981-4-13',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2039,'1982-4-14',31,31,31,32,31,31,29,30,30,29,30,30),
		array(2040,'1983-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2041,'1984-4-13',31,31,32,32,31,30,30,29,30,29,30,30),
		array(2042,'1985-4-13',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2043,'1986-4-14',31,31,31,32,31,31,29,30,30,29,30,30),
		array(2044,'1987-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2045,'1988-4-13',31,32,31,32,31,30,30,29,30,29,30,30),
		array(2046,'1989-4-13',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2047,'1990-4-14',31,31,31,32,31,31,30,29,30,29,30,30),
		array(2048,'1991-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2049,'1992-4-13',31,32,31,32,31,30,30,30,29,29,30,30),
		array(2050,'1993-4-13',31,32,31,32,31,30,30,30,29,30,29,31),
		array(2051,'1994-4-14',31,31,31,32,31,31,30,29,30,29,30,30),
		array(2052,'1995-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2053,'1996-4-13',31,32,31,32,31,30,30,30,29,29,30,30),
		array(2054,'1997-4-13',31,32,31,32,31,30,30,30,29,30,29,31),
		array(2055,'1998-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2056,'1999-4-14',31,31,32,31,32,30,30,29,30,29,30,30),
		array(2057,'2000-4-13',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2058,'2001-4-14',30,32,31,32,31,30,30,30,29,30,29,31),
		array(2059,'2002-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2060,'2003-4-14',31,31,32,32,31,30,30,29,30,29,30,30),
		array(2061,'2004-4-13',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2062,'2005-4-14',30,32,31,32,31,31,29,30,29,30,29,31),
		array(2063,'2006-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2064,'2007-4-14',31,31,32,32,31,30,30,29,30,29,30,30),
		array(2065,'2008-4-13',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2066,'2009-4-14',31,31,31,32,31,31,29,30,30,29,29,31),
		array(2067,'2010-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2068,'2011-4-14',31,31,32,32,31,30,30,29,30,29,30,30),
		array(2069,'2012-4-13',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2070,'2013-4-14',31,31,31,32,31,31,29,30,30,29,30,30),
		array(2071,'2014-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2072,'2015-4-14',31,32,31,32,31,30,30,29,30,29,30,30),
		array(2073,'2016-4-13',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2074,'2017-4-14',31,31,31,32,31,31,30,29,30,29,30,30),
		array(2075,'2018-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2076,'2019-4-14',31,32,31,32,31,30,30,30,29,29,30,30),
		array(2077,'2020-4-13',31,32,31,32,31,30,30,30,29,30,29,31),
		array(2078,'2021-4-14',31,31,31,32,31,31,30,29,30,29,30,30),
		array(2079,'2022-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2080,'2023-4-14',31,32,31,32,31,30,30,30,29,29,30,30),
		array(2081,'2024-4-13',31,32,31,32,31,30,30,30,29,30,29,31),
		array(2082,'2025-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2083,'2026-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2084,'2027-4-14',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2085,'2028-4-14',30,32,31,32,31,30,30,30,29,30,29,31),
		array(2086,'2029-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2087,'2030-4-14',31,31,32,32,31,30,30,29,30,29,30,30),
		array(2088,'2031-4-14',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2089,'2032-4-14',30,32,31,32,31,31,29,30,29,30,29,31),
		array(2090,'2033-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2091,'2034-4-14',31,31,32,32,31,30,30,29,30,29,30,30),
		array(2092,'2035-4-14',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2093,'2036-4-14',31,31,31,32,31,31,29,30,30,29,29,31),
		array(2094,'2037-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2095,'2038-4-14',31,31,32,32,31,30,30,29,30,29,30,30),
		array(2096,'2039-4-14',31,32,31,32,31,30,30,30,29,29,30,31),
		array(2097,'2040-4-14',31,31,31,32,31,31,29,30,30,29,30,30),
		array(2098,'2041-4-14',31,31,32,31,31,31,30,29,30,29,30,30),
		array(2099,'2042-4-14',31,31,32,32,31,30,30,29,30,29,30,30),
		array(2100,'2043-4-14',31,32,31,32,31,30,30,30,29,29,30,31)
	);

	private $firstday_en ="1918-04-13";
	private $start_ne = "2000";
	private $start_en = "1943";
	private $end_ne = "2095";
	private $end_en = "3000";
	private $month_name = array('बैशाख', 'जेठ', 'असार', 'साउन', 'भदौ', 'असोज', 'कार्तिक', 'मङ्सिर', 'पुस', 'माघ', 'फाल्गुण', 'चैत');
	private $day_name = array('आइतबार', 'सोमबार', 'मङ्गलबार', 'बुधबार', 'बिहिबार', 'शुक्रबार', 'शनिवार');

    /**
     * @param $year
     * @param $month
     * @param $day
     * @param $year, $month, $day
     * @return array
     */
	private function get_week_ne($year, $month, $day)
	{
		 $jd = GregorianToJD($month, $day, $year);
		 return $this->day_name[JDDayOfWeek($jd,0)];
	}

    /**
     * @param $year
     * @param $month
     * @param $day
     * @return string|bool
     */
	private function validate_ne($year, $month, $day)
	{
		if(!array_key_exists($year, $this->nepali_calendar))
		{
			return 'Invalid <b>Year</b> range';
		}
		if($month >12 || $month<1)
		{
			return 'Invalid <b>Month</b> range';
		}
		if($day>$this->nepali_calendar[$year][$month-1] || $day<1)
		{
			return 'Invalid <b>Day</b>';
		}
		return TRUE;
	}

    /**
     * @param $year
     * @param $month
     * @param $day
     * @return bool|string
     */
	private function validate_en($year, $month, $day)
	{
		if ($year < $this->start_en || $year>$this->end_en) { return 'Invalid Year Range';}
		if ($month < 1 || $month>12) { return 'Invalid Month Range';}
		if ($day < 1 || ($day>cal_days_in_month(CAL_GREGORIAN, $month, $year)))
			{ return 'Invalid day Range';}
		return TRUE;
	}


    /**
     * @param $year
     * @param $month
     * @param $day
     * @return array
     */
	public function get_nepali_date( $year, $month, $day )
	{
        $english_date = "$year-$month-$day";
		$arrsize=count($this->nepali_calendar)-1;
		$i=0;
		for ($i=0; $i<=$arrsize; $i++){
			$year_days=0;
			for ($j=2;$j<14;$j++)
				{
					$year_days=$year_days + $this->nepali_calendar[$i][$j];
				}
			$start_date=$this->nepali_calendar[$i][1];

			$end_date=date( 'Y-m-d', ( strtotime($this->nepali_calendar[$i][1]) + $year_days * 86400 ));
			if (strtotime($english_date)>=strtotime($start_date) && strtotime($english_date)<strtotime($end_date)){
				break;
			}
		}
		$diff=strtotime($english_date)-strtotime($start_date);
		$diff = $diff < 0 ? $diff * -1:$diff ;
		$days = ($diff/86400)+1;
		$years=$this->nepali_calendar[$i][0];
		$months=0;
		for ($j=2; $j<14; $j++)
			{
				if($days > $this->nepali_calendar[$i][$j])
					{
						$days=$days-$this->nepali_calendar[$i][$j];
					}
				else {
					$months= $j-1;
					break ;
				}
			}

        // Output
        $output = array();
        $output['y'] = $years;
        $output['d'] = ( $days < 10 ? '0'. $days : (int) $days  );
        $output['M'] = $this->month_name[ (int) ( $months < 10 ? '0'. $months : $months  ) - 1 ];

		return $output;
	}

    /**
     * @param $nepali_date
     * @return string
     */
	public function get_eng_date($nepali_date)
	{
		$arrsize=count($this->nepali_calendar)-1;
		$nepdate = explode("-",$nepali_date);
		$year=intval($nepdate[0]);
		$month=intval($nepdate[1]);
		$day=intval($nepdate[2]);
		$i=0;
		for ($i=0; $i<=$arrsize; $i++){
			if ($this->nepali_calendar[$i][0]==$year){
				break;
			}
		}
		$days = 0;
		for ($j=2; $j<14; $j++)
			{
				if(($j-1) < $month)
					{
						$days=$days + $this->nepali_calendar[$i][$j];
					}
				else {
					$days= $days+$day;
					break ;
				}
			}
			$date=date( 'Y-m-d', ( strtotime($this->nepali_calendar[$i][1]) + ($days-1) * 86400 ));
		return $date;
	}
}
